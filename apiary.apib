FORMAT: 1A
HOST: http://cdp-todo.apiblueprint.org/

# CDP-TODO

Cdp-todo is an attempt to creat good rest api.

# TODO API Root [/]

This resource does not have any attributes. Instead it offers the initial
API affordances in the form of the links in the JSON body.

It is recommend to follow the “url” link values,
[Link](https://tools.ietf.org/html/rfc5988) or Location headers where
applicable to retrieve resources. Instead of constructing your own URLs,
to keep your client decoupled from implementation details.

## Retrieve the Entry Point [GET]

+ Response 200 (application/json)

        {
            "tasks_url": "/tasks"
        }

## Group Tasks

Resources related to tasks in the API.

## Tasks [/tasks/{task_id}]

A Task object has the following attributes:

+ task (string) - The task
+ description  (string)
+ deadline (string) - An ISO8601 date when the task need to be finished.
+ priority (string) -- Hi, Medium, Low
+ category (string)
+ status (string)  - Normal, Completed, Overdue values

+ Parameters
    + task_id: 1 (required, number) - ID of the Task in form of an integer

### View a task details [GET]

+ Response 200 (application/json)

        {
            "task": "First task",
            "description": "this is the first task",
            "deadline": "2014-11-11T08:40:51.620Z",
            "priority": "High",
            "category": {
                "title": "first category",
                "url": "/category/1"
            },
            "status": "Normal"
        }

## Choice [/tasks/{task_id}/check/{check_status}]

+ Parameters
    + task_id: 1 (required, number) - ID of the task in form of an integer
    + check_status: 1 (required, number) - ID of the check status in form of an integer (0 - Uncompleted, 1 - Completed)
    

### Change status of a Task [POST]

This action allows you to change the status of the task.

+ Response 201

    + Headers

            Location: /task/1

## Tasks Collection [/tasks{?page}{?description}{?deadline}{?priority}{?category}]

+ Parameters
    + page: 1 (optional, number) - The page of tasks to return
    + description  (string)
    + deadline (string) - An ISO8601 date when the task need to be finished.
    + priority (string) - Hi, Medium, Low
    + category (string)

### List All Tasks [GET]

+ Response 200 (application/json)

    + Headers

            Link: </tasks?page=2>; rel="next"

    + Body

            [
                {
                    "task": "First task",
                    "description": "this is the first task",
                    "deadline": "2014-11-11T08:40:51.620Z",
                    "priority": "High",
                    "category": {
                        "title": "first category",
                        "url": "/category/1"
                    },
                    "status": "Normal"
                }
            ]

### Create a New Task [POST]

You may create your own tasks using this action. It takes a JSON
object containing a task and the following arguments in the
form of choices.

+ task (string) - The task
+ description  (string)
+ deadline (string) - An ISO8601 date when the task need to be finished.
+ priority (string) -- Hi, Medium, Low
+ category (string)
+ status (string)  - Normal, Completed, Overdue values

+ Request (application/json)

        {
            "task": "Second task",
            "description": "this is the second task",
            "deadline": "2014-11-11T08:40:51.620Z",
            "priority": "High",
            "category": "second category",
            "status": "Normal"
        }

+ Response 201 (application/json)

    + Headers

            Location: /tasks/2

    + Body

            {
                "task": "Second task",
                "description": "this is the second task",
                "deadline": "2014-11-11T08:40:51.620Z",
                "priority": "High",
                "category": {
                    "title": "second category",
                    "url": "/category/2"
                },
                "status": "Normal"
            }
